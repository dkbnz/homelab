version: "3.3"

networks:
  proxy:
    external: true
  database:
    external: true

services:
# Traefik frontend router, will handle all requests sent to server and send to correct container.
  traefik:
    image: traefik:v2.0
    container_name: traefik
    networks:
      - proxy
    ports:
      - 80:80
    volumes:
      - ./traefik.yml:/traefik.yml:ro
      - ${DATA_DIR}/traefik:/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

# Shared postgres database for applications that don't require standalone database server.
  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data
      - ./create_databases.sh:/docker-entrypoint-initdb.d/create_databases.sh:ro
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${NEXTCLOUD_DB}:${NEXTCLOUD_DB_PASSWORD},${FRESHRSS_DB}:${FRESHRSS_DB_PASSWORD}
      - POSTGRES_PASSWORD=${SHARED_POSTGRES_PASSWORD}
    networks:
      - database

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=secret
      - PGADMIN_LISTEN_PORT=15432
    volumes:
      - ${DATA_DIR}/pgadmin:/var/lib/pgadmin
    networks:
      - database
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entrypoints=http"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN}`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=15432"
      - "traefik.docker.network=proxy"

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    environment:
      - WHITELIST=dk.barrett+gh@hotmail.com
      - DEFAULT_PROVIDER=generic-oauth
      - SECRET=<random secret>
      - INSECURE_COOKIE=true # Example assumes no https, do not use in production
      - PROVIDERS_GENERIC_OAUTH_AUTH_URL=https://github.com/login/oauth/authorize
      - PROVIDERS_GENERIC_OAUTH_TOKEN_URL=https://github.com/login/oauth/access_token
      - PROVIDERS_GENERIC_OAUTH_USER_URL=https://api.github.com/user
      - PROVIDERS_GENERIC_OAUTH_CLIENT_ID=<client id>
      - PROVIDERS_GENERIC_OAUTH_CLIENT_SECRET=<client secret>
    labels: 
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:41$"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
                                                                                                            - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"
 
  heimdall:
    image: linuxserver/heimdall:latest
    env_file: /var/data/config/autopirate/heimdall.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/data/heimdall:/config
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.entrypoints=http"
      - "traefik.http.routers.heimdall.rule=Host(`${DOMAIN}`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=15432"

