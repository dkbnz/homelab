version: "3.3"

networks:
  traefik_public:
    external: true
  database:
    external: true

services:
# Traefik frontend router, will handle all requests sent to server and send to correct container.
  traefik:
    image: traefik:v2.0
    container_name: traefik
    networks:
      - traefik_public
    ports:
      - 80:80
    volumes:
      - ./traefik.yml:/traefik.yml:ro
      - ${DATA_DIR}/traefik:/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.secure.basicauth.users=${BASIC_AUTH_USERS}"
      - "traefik.http.middlewares.secure.basicauth.removeHeader=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.middlewares=secure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

# Shared postgres database for applications that don't require standalone database server.
  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data
      - ./create_databases.sh:/docker-entrypoint-initdb.d/create_databases.sh:ro
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${NEXTCLOUD_DB}:${NEXTCLOUD_DB_PASSWORD},${FRESHRSS_DB}:${FRESHRSS_DB_PASSWORD}
      - POSTGRES_PASSWORD=${SHARED_POSTGRES_PASSWORD}
    networks:
      - database

  heimdall:
    image: linuxserver/heimdall:latest
    env_file: ${ENV_DIR}/base/heimdall.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_DIR}/heimdall:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.entrypoints=http"
      - "traefik.http.routers.heimdall.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.heimdall.middlewares=secure"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
    networks:
      - traefik_public
